{"version":3,"sources":["components/CryptoList/Data/CryptoApi.js","CryptoContex.js","components/Searchbar/Searchbar.js","components/Header/Navbar.js","components/CryptoList/CryptoInfo.js","components/Header/Header.js","components/CryptoList/Pagination.js","components/CryptoList/CryptoRow.js","components/CryptoList/CryptoList.js","components/Favourites/Favourites.js","components/Footer/Footer.js","components/pages/CryptoDetails.js","App.js","reportWebVitals.js","index.js"],"names":["fetchCrypto","fetch","then","response","json","data","fetchInfo","CryptoContex","createContext","CryptoContexProvider","children","useState","crypto","setCrypto","cryptoCopy","setcryptoCopy","loading","setLoading","useEffect","intervalID","setInterval","Object","values","clearInterval","Provider","value","searchHandler","term","filtredCrypto","filter","x","symbol","toLowerCase","includes","name","Searchbar","useContext","setTerm","search","className","onChange","e","target","onKeyDown","key","type","placeholder","onClick","Navbar","location","useLocation","useParams","id","to","pathname","window","reload","style","marginRight","CryptoInfo","info","setInfo","infoLoading","setInfoLoading","src","alt","market_cap_usd","volume_24h_usd","bitcoin_dominance_percentage","Header","Pagination","pageLimit","dataLimit","Math","round","length","pages","currentPage","setCurrentPage","isFav","setIsFav","idCryptoFav","localData","JSON","parse","localStorage","getItem","map","item","push","handleFavouriteClick","currency","index","saveCurrencyToLocalStorage","dataFromLocalStorage","getCryptoId","idcrypto","indexOf","console","log","indx","splice","setItem","stringify","checkIdAlreadyExist","changePage","event","pageNumber","Number","textContent","startIndex","endIndex","slice","getPaginatedData","idx","rank","marginLeft","quotes","USD","price","toFixed","percent_change_24h","icon","faChevronDown","faChevronUp","percent_change_7d","faStarSolid","faStar","cursor","page","faChevronLeft","size","start","floor","Array","fill","_","getPaginationGroup","faChevronRight","CryptoRow","props","sortedCrypto","sort","a","b","CryptoList","role","Favourites","realtime","setRealtime","favouriteCrypto","clear","handleRemoveFavourite","Footer","CryptoDetails","params","singleCrypto","maxWidth","ath_price","percent_change_30d","max_supply","market_cap","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAAMA,EAAc,WAClB,OAAOC,MAAM,0CACVC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,OAAOA,MAUPC,EAAY,WAChB,OAAOL,MAAM,yCACVC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,OAAOA,M,OCfAE,EAAeC,0BAwCbC,MAtCf,YAA6C,IAAbC,EAAY,EAAZA,SAC9B,EAA4BC,qBAA5B,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,qBAApC,mBAAOG,EAAP,KAAmBC,EAAnB,KAEA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KA2BA,OAzBAC,qBAAU,WACRlB,IAAcE,MAAK,SAACG,GAClBQ,EAAUR,GACVU,EAAcV,GAEdY,GAAW,MAEb,IAAME,EAAaC,aAAY,WAC7BpB,IAAcE,MAAK,SAACG,GAClBQ,EAAUQ,OAAOC,OAAOjB,SAEzB,OAEH,OAAO,kBAAMkB,cAAcJ,MAC1B,IAYD,cAACZ,EAAaiB,SAAd,CAAuBC,MAAO,CAAEb,SAAQI,UAASU,cAV7B,SAACC,GACrB,IAAMC,EAAgB,YAAId,GAAYe,QACpC,SAACC,GAAD,OACEA,EAAEC,OAAOC,cAAcC,SAASN,EAAKK,gBACrCF,EAAEI,KAAKF,cAAcC,SAASN,EAAKK,kBAEvCnB,EAAUe,KAIV,SACGlB,KCRQyB,EA3BG,WAChB,MAAkCC,qBAAW7B,GAA7BmB,GAAhB,EAAQd,OAAR,EAAgBc,eAChB,EAAwBf,mBAAS,IAAjC,mBAAOgB,EAAP,KAAaU,EAAb,KAEMC,EAAS,WACbZ,EAAcC,IAGhB,OACE,sBAAKY,UAAU,UAAf,UACE,uBACEd,MAAOE,EACPa,SAAU,SAACC,GAAD,OAAOJ,EAAQI,EAAEC,OAAOjB,QAClCkB,UAAW,SAACF,GAAD,MAAiB,UAAVA,EAAEG,KAAmBN,KACvCO,KAAK,OACLN,UAAU,oBACVO,YAAY,SACZ,aAAW,WAGb,wBAAQP,UAAU,0BAA0BQ,QAAST,EAArD,wB,eCyCSU,EAxDA,WACb,IAAMC,EAAWC,cACFC,cAQf,OACE,qBAAKZ,UAAU,OAAf,SACE,qBAAKA,UAAU,6CAAf,SACE,qBAAKA,UAAU,YAAf,SAeE,sBACEA,UAAU,4DACVa,GAAG,sBAFL,UAIE,qBAAIb,UAAU,iDAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMc,GAAG,IAAIN,QA9BN,WACO,MAAtBE,EAASK,UACXC,OAAON,SAASO,UA4B8BjB,UAAU,kBAA9C,qBAIF,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMc,GAAG,cAAcd,UAAU,kBAAjC,6BAKJ,uBAAMkB,MAAO,CAAEC,YAAa,QAA5B,wBACa,+CAGU,MAAtBT,EAASK,SAAmB,cAAC,EAAD,IAAgB,eCH1CK,EAjDI,WACjB,MAAwBhD,mBAAS,sBAAjC,mBAAOiD,EAAP,KAAaC,EAAb,KACA,EAAsClD,oBAAS,GAA/C,mBAAOmD,EAAP,KAAoBC,EAApB,KAEA7C,qBAAU,WACR6C,GAAe,KACd,IAEH7C,qBAAU,WACRZ,IAAYJ,MAAK,SAACG,GAChBwD,EAAQxD,MAGV,IAAMc,EAAaC,aAAY,WAC7Bd,IAAYJ,MAAK,SAACG,GAChBwD,EAAQxD,QAET,OAEH,OAAO,kBAAMkB,cAAcJ,MAC1B,CAAC2C,IAMJ,OACE,mCACE,sBAAKvB,UAAU,uDAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBAAKyB,IAAI,eAAeC,IAAI,GAAG1B,UAAU,gBAE3C,sBAAKA,UAAU,aAAf,UACE,sBAAMA,UAAU,GAAhB,wBACA,oBAAGA,UAAU,UAAb,UAAwBqB,EAAKM,eAA7B,WAEF,sBAAK3B,UAAU,YAAf,qBAEE,oBAAGA,UAAU,UAAb,UAAwBqB,EAAKO,eAA7B,WAEF,sBAAK5B,UAAU,aAAf,2BAEE,oBAAGA,UAAU,UAAb,UAAwBqB,EAAKQ,6BAA7B,iBC/BKC,EAXA,WACb,OACE,iCACE,sBAAK9B,UAAU,iBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,U,sBCyNO+B,MAtNf,YAAqD,IAA/BjE,EAA8B,EAA9BA,KAAMkE,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,UACrC,EAAgB7D,mBAAS8D,KAAKC,MAAMrE,EAAKsE,OAASH,IAA3CI,EAAP,oBACA,EAAsCjE,mBAAS,GAA/C,mBAAOkE,EAAP,KAAoBC,EAApB,KACA,EAA0BnE,oBAAS,GAAnC,mBAAOoE,EAAP,KAAcC,EAAd,KACMC,EAAc,GAEpB/D,qBAAU,cAAU,CAAC6D,IACrB,IAAMG,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,cAG/B,MAAbJ,GACFA,EAAUK,KAAI,SAACC,GACbP,EAAYQ,KAAKD,EAAKpC,OAe5B,IAAMsC,EAAuB,SAACC,EAAUC,GACtCZ,GAAUD,GACV,IAAMc,EAA6BF,EAC/BG,EAAuB,GAE3B,GAAyC,MAArCT,aAAaC,QAAQ,aAAsB,CAE7C,IAAMS,GADND,EAAuBX,KAAKC,MAAMC,aAAaC,QAAQ,eACdC,KAAI,SAACS,GAC5C,OAAOA,EAAS5C,MAIhB/B,OAAOC,OAAOyE,GAAaE,QAAQJ,EAA2BzC,KAAO,GAErE8C,QAAQC,IAAI,aAxBlB,SAA6BR,GAC3B,GAAIV,EAAYhD,SAAS0D,EAASvC,IAAK,CACrC,IAAMgD,EAAOnB,EAAYgB,QAAQN,EAASvC,IAC1C8B,EAAUmB,OAAOD,EAAM,GACvBf,aAAaiB,QAAQ,YAAanB,KAAKoB,UAAUrB,KAqB/CsB,CAAoBb,KAEpBO,QAAQC,IAAI,cACZL,EAAqBL,KAAKI,GAC1BR,aAAaiB,QAAQ,YAAanB,KAAKoB,UAAUT,UAGnDI,QAAQC,IAAI,QACZL,EAAqBL,KAAKI,GAC1BR,aAAaiB,QAAQ,YAAanB,KAAKoB,UAAUT,KAYrD,SAASW,EAAWC,GAClB,IAAMC,EAAaC,OAAOF,EAAMhE,OAAOmE,aACvC/B,EAAe6B,GAcjB,OACE,qCAZuB,WACvB,IAAMG,EAAajC,EAAcL,EAAYA,EACvCuC,EAAWD,EAAatC,EAC9B,OAAOnE,EAAK2G,MAAMF,EAAYC,GAY3BE,GAAmB1B,KAAI,SAACI,EAAUuB,GAAX,OACtB,mCACE,sBAEE3E,UAAU,oDAFZ,UAIE,qBAAKA,UAAU,yBAAf,SAAyCoD,EAASwB,OAElD,qBAAK5E,UAAU,kBAAf,SACE,uBAAMA,UAAU,gCAAhB,UACE,cAAC,IAAD,CACEc,GAAE,mBAAcsC,EAASvC,IACzBb,UAAU,iCAFZ,SAIE,8BAAIoD,EAASzD,KAAb,SAEF,uBAAMuB,MAAO,CAAE2D,WAAY,QAA3B,cAAuCzB,EAAS5D,OAAhD,YAIJ,qBAAKQ,UAAU,iBAAf,SACE,uBAAMA,UAAU,qCAAhB,UACGoD,EAAS0B,OAAOC,IAAIC,MAAQ,EACzB5B,EAAS0B,OAAOC,IAAIC,MAAMC,QAAQ,GAClC7B,EAAS0B,OAAOC,IAAIC,MAAQ,KAC5B5B,EAAS0B,OAAOC,IAAIC,MAAMC,QAAQ,GAClC7B,EAAS0B,OAAOC,IAAIC,MAAMC,QAAQ,GAAI,IAL5C,WAUF,sBAAKjF,UAAU,sCAAf,UACGoD,EAAS0B,OAAOC,IAAIG,mBAAqB,EACxC,sBAAMlF,UAAU,gCAAhB,SACE,cAAC,IAAD,CACEA,UAAU,cACVmF,KAAMC,QAIV,sBAAMpF,UAAU,gCAAhB,SACE,cAAC,IAAD,CACEA,UAAU,eACVmF,KAAME,QAKZ,sBAAMrF,UAAU,UAAhB,SACGoD,EAAS0B,OAAOC,IAAIG,qBAGvB,qBAAKlF,UAAU,YAAf,qBAGF,sBAAKA,UAAU,iBAAf,UACGoD,EAAS0B,OAAOC,IAAIO,kBAAoB,EACvC,sBAAMtF,UAAU,gCAAhB,SACE,cAAC,IAAD,CACEA,UAAU,cACVmF,KAAMC,QAIV,sBAAMpF,UAAU,gCAAhB,SACE,cAAC,IAAD,CACEA,UAAU,gBACVmF,KAAME,QAKZ,sBAAMrF,UAAU,UAAhB,SACGoD,EAAS0B,OAAOC,IAAIO,oBAGvB,qBAAKtF,UAAU,YAAf,oBAGF,qBAAKA,UAAU,uFAAf,SACE,cAAC,IAAD,CACEA,UAAU,cACVmF,KAAMzC,EAAYhD,SAAS0D,EAASvC,IAAM0E,IAAcC,IACxDtE,MAAO,CAAEuE,OAAQ,WACjBjF,QAAS,kBAAM2C,EAAqBC,UAjFnCA,EAASvC,SAwFpB,qBAAKb,UAAU,MAAf,SACE,qBAAKA,UAAU,wCAAf,SACE,sBAAKA,UAAU,uBAAf,UAEE,wBACEQ,QAxHZ,WACE+B,GAAe,SAACmD,GAAD,OAAUA,EAAO,MAwHtB1F,UAAS,eAA0B,IAAhBsC,EAAoB,WAAa,GAA3C,YAFX,SAIE,cAAC,IAAD,CAAiB6C,KAAMQ,IAAeC,KAAK,SA5G5B,WACzB,IAAIC,EAAQ3D,KAAK4D,OAAOxD,EAAc,GAAKN,GAAaA,EACxD,OAAO,IAAI+D,MAAM/D,GAAWgE,OAAOhD,KAAI,SAACiD,EAAGtB,GAAJ,OAAYkB,EAAQlB,EAAM,KA8GxDuB,GAAqBlD,KAAI,SAACC,EAAMI,GAAP,OACxB,wBAEE7C,QAAS0D,EACTlE,UAAS,yBACPsC,IAAgBW,EAAO,SAAW,KAD3B,KAHX,SAOE,+BAAOA,KANFI,MAWT,wBACE7C,QAjJZ,WACE+B,GAAe,SAACmD,GAAD,OAAUA,EAAO,MAiJtB1F,UAAS,eACPsC,IAAgBD,EAAQ,WAAa,GAD9B,YAFX,SAME,cAAC,IAAD,CAAiB8C,KAAMgB,IAAgBP,KAAK,oBCpM3CQ,EAlBG,SAACC,GACjB,IAAQhI,EAAWgI,EAAXhI,OACFiI,EAAejI,EAAOkI,MAAK,SAAUC,EAAGC,GAC5C,OAAOD,EAAE5B,KAAO6B,EAAE7B,QAGpB,OACE,mCACE,cAAC,EAAD,CACE9G,KAAMwI,EACNtE,UAAW,EACXC,UAAW,GACX5D,OAAQA,OC4CDqI,EAvDI,WACjB,MAA4B7G,qBAAW7B,GAA/BK,EAAR,EAAQA,OAAQI,EAAhB,EAAgBA,QAEhB,OACE,sBAAKuB,UAAU,iBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,sBAAMA,UAAU,0BAAhB,iBAGF,qBAAKA,UAAU,iBAAf,SACE,sBAAMA,UAAU,uDAAhB,sBAKF,qBAAKA,UAAU,iBAAf,SACE,sBAAMA,UAAU,qDAAhB,qBAKF,qBAAKA,UAAU,sCAAf,SACE,sBAAMA,UAAU,4CAAhB,mBAKF,qBAAKA,UAAU,iBAAf,SACE,sBAAMA,UAAU,4CAAhB,kBAKF,qBAAKA,UAAU,2CAAf,SACE,sBAAMA,UAAU,4CAAhB,+BAOO,IAAZvB,EACC,qBACEuB,UAAU,4DACV2G,KAAK,WAGP,cAAC,EAAD,CAAWtI,OAAQA,QCyGZuI,EApJI,WACjB,MAAgCxI,oBAAS,GAAzC,mBAAOyI,EAAP,KAAiBC,EAAjB,KAEMC,EAAkBnE,KAAKC,MAAMC,aAAaC,QAAQ,cAWxD,OACE,sBAAK/C,UAAU,iBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,sBAAMA,UAAU,0BAAhB,iBAGF,qBAAKA,UAAU,iBAAf,SACE,sBAAMA,UAAU,uDAAhB,sBAKF,qBAAKA,UAAU,iBAAf,SACE,sBAAMA,UAAU,kEAAhB,qBAKF,qBAAKA,UAAU,sCAAf,SACE,sBAAMA,UAAU,4CAAhB,mBAKF,qBAAKA,UAAU,iBAAf,SACE,sBAAMA,UAAU,4CAAhB,kBAKF,qBAAKA,UAAU,2CAAf,SACE,sBAAMA,UAAU,4CAAhB,8BAMN,8BACsB,MAAnB+G,EACG,KACAA,EAAgB/D,KAAI,SAACI,EAAUC,GAC7B,OACE,sBAEErD,UAAU,oDAFZ,UAIE,qBAAKA,UAAU,yBAAf,SAAyCoD,EAASwB,OAElD,qBAAK5E,UAAU,iBAAf,SACE,uBAAMA,UAAU,+BAAhB,UACE,8BAAIoD,EAASzD,KAAb,OACA,uBAAMuB,MAAO,CAAE2D,WAAY,QAA3B,cACIzB,EAAS5D,OADb,YAMJ,qBAAKQ,UAAU,iBAAf,SACE,uBAAMA,UAAU,qCAAhB,UACGoD,EAAS0B,OAAOC,IAAIC,MAAMC,QAAQ,GADrC,YAKF,sBAAKjF,UAAU,sCAAf,UACGoD,EAAS0B,OAAOC,IAAIG,mBAAqB,EACxC,sBAAMlF,UAAU,gCAAhB,SACE,cAAC,IAAD,CACEA,UAAU,cACVmF,KAAMC,QAIV,sBAAMpF,UAAU,gCAAhB,SACE,cAAC,IAAD,CACEA,UAAU,eACVmF,KAAME,QAKZ,sBAAMrF,UAAU,UAAhB,SACGoD,EAAS0B,OAAOC,IAAIG,qBAGvB,qBAAKlF,UAAU,YAAf,qBAGF,sBAAKA,UAAU,iBAAf,UACGoD,EAAS0B,OAAOC,IAAIO,kBAAoB,EACvC,sBAAMtF,UAAU,gCAAhB,SACE,cAAC,IAAD,CACEA,UAAU,cACVmF,KAAMC,QAIV,sBAAMpF,UAAU,gCAAhB,SACE,cAAC,IAAD,CACEA,UAAU,gBACVmF,KAAME,QAKZ,sBAAMrF,UAAU,UAAhB,SACGoD,EAAS0B,OAAOC,IAAIO,oBAGvB,qBAAKtF,UAAU,YAAf,oBAGF,qBAAKA,UAAU,uFAAf,SACE,cAAC,IAAD,CACEA,UAAU,cACVmF,KAAMK,IACNtE,MAAO,CAAEuE,OAAQ,WACjBjF,QAAS,kBAhIC,SAAC6C,GAC7B0D,EAAgBjD,OAAOT,EAAO,GAC9BP,aAAaiB,QAAQ,YAAanB,KAAKoB,UAAU+C,IAEjDD,GAAaD,GACkB,IAA3BE,EAAgB3E,QAClBU,aAAakE,QA0HkBC,CAAsB5D,UAzEpCD,EAASvC,SAgFN,MAAnBkG,EACC,sBAAM/G,UAAU,+DAAhB,oCAGE,SCzIKkH,EAdA,WACb,OACE,wBAAQlH,UAAU,eAAlB,SACE,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAMA,UAAU,0BAAhB,+DCsKKmH,EAlKO,WACpB,MAA4BtH,qBAAW7B,GAA/BK,EAAR,EAAQA,OAAQI,EAAhB,EAAgBA,QACV2I,EAASxG,cAEf,OACE,oCACe,IAAZnC,EACC,qBACEuB,UAAU,4DACV2G,KAAK,WAGPtI,EAAO2E,KAAI,SAACqE,GACV,GAAIA,EAAaxG,KAAOuG,EAAOvG,GAC7B,OACE,mCACE,qBAEEb,UAAU,kCAFZ,SAIE,sBAAKA,UAAU,GAAf,UACE,qBAAKA,UAAU,kDAAf,SACE,uBAAMA,UAAU,eAAhB,UACGqH,EAAa7H,OADhB,0BAKF,qBAAKQ,UAAU,kBAAf,SACE,sBAAKA,UAAU,0CAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,sBAAKA,UAAU,OAAOkB,MAAO,CAAEoG,SAAU,SAAzC,UACE,qBAAKtH,UAAU,sBAAf,SACE,iCAAOqH,EAAa1H,KAApB,cAEF,qBAAKK,UAAU,YAAf,SACE,oBAAIA,UAAU,aAAd,SACE,iCACGqH,EAAavC,OAAOC,IAAIC,MAAMC,QAAQ,GADzC,mBAOR,qBAAKjF,UAAU,+BAAf,SACE,sBAAKA,UAAU,SAASkB,MAAO,CAAEoG,SAAU,SAA3C,UACE,qBAAKtH,UAAU,sBAAf,SACE,8DAEF,qBAAKA,UAAU,YAAf,SACE,qBAAIA,UAAU,aAAd,UACGqH,EAAavC,OAAOC,IAAIwC,UAAUtC,QAAQ,GAD7C,gBAON,qBAAKjF,UAAU,+BAAf,SACE,sBAAKA,UAAU,SAASkB,MAAO,CAAEoG,SAAU,SAA3C,UACE,qBAAKtH,UAAU,sBAAf,SACE,wDAEF,qBAAKA,UAAU,YAAf,SACE,oBAAIA,UAAU,aAAd,SACE,iCACGqH,EAAavC,OAAOC,IAAIG,mBAD3B,KAEGmC,EAAavC,OAAOC,IAAIG,mBACzB,EACE,sBAAMlF,UAAU,OAAhB,SACE,cAAC,IAAD,CACEA,UAAU,cACVmF,KAAMC,QAIV,sBAAMpF,UAAU,OAAhB,SACE,cAAC,IAAD,CACEA,UAAU,eACVmF,KAAME,yBAW1B,qBAAKrF,UAAU,WAAf,SACE,sBAAKA,UAAU,wCAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,OAAOkB,MAAO,CAAEoG,SAAU,SAAzC,UACE,qBAAKtH,UAAU,sBAAf,SACE,2DAEF,qBAAKA,UAAU,YAAf,SACE,oBAAIA,UAAU,aAAd,SACE,iCACGqH,EAAavC,OAAOC,IAAIyC,mBAD3B,KAEGH,EAAavC,OAAOC,IAAIyC,mBACzB,EACE,sBAAMxH,UAAU,OAAhB,SACE,cAAC,IAAD,CACEA,UAAU,cACVmF,KAAMC,QAIV,sBAAMpF,UAAU,OAAhB,SACE,cAAC,IAAD,CACEA,UAAU,eACVmF,KAAME,oBAStB,qBAAKrF,UAAU,+BAAf,SACE,sBAAKA,UAAU,OAAOkB,MAAO,CAAEoG,SAAU,SAAzC,UACE,qBAAKtH,UAAU,sBAAf,SACE,gDAEF,qBAAKA,UAAU,YAAf,SACE,oBAAIA,UAAU,aAAd,SACE,iCACGqH,EAAaI,WACbJ,EAAa7H,mBAMxB,qBAAKQ,UAAU,4CAAf,SACE,sBAAKA,UAAU,SAASkB,MAAO,CAAEoG,SAAU,SAA3C,UACE,qBAAKtH,UAAU,sBAAf,SACE,gDAEF,qBAAKA,UAAU,YAAf,SACE,oBAAIA,UAAU,aAAd,SACE,iCACGqH,EAAavC,OAAOC,IAAI2C,WAD3B,4BA7HTL,EAAaxG,YCIrB8G,MAvBf,WACE,OACE,sBAAK3H,UAAU,MAAf,UACE,cAAC,EAAD,UACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAO4H,OAAO,EAAMC,KAAK,IAAzB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACE,cAAC,EAAD,WAIN,cAAC,EAAD,QCfSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrK,MAAK,YAAkD,IAA/CsK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f8bfcb1e.chunk.js","sourcesContent":["const fetchCrypto = () => {\n  return fetch(`https://api.coinpaprika.com/v1/tickers`)\n    .then((response) => response.json())\n    .then((data) => {\n      return data;\n      // return data.filter((el) => {\n\n      //   // if (el.rank <= 50) {\n      //   //   return el;\n      //   // }\n      // });\n    });\n};\n\nconst fetchInfo = () => {\n  return fetch(`https://api.coinpaprika.com/v1/global`)\n    .then((response) => response.json())\n    .then((data) => {\n      return data;\n    });\n};\n\nexport { fetchCrypto, fetchInfo };\n","import React, { createContext, useState, useEffect } from \"react\";\nimport { fetchCrypto } from \"./components/CryptoList/Data/CryptoApi\";\n\nexport const CryptoContex = createContext();\n\nfunction CryptoContexProvider({ children }) {\n  const [crypto, setCrypto] = useState();\n  const [cryptoCopy, setcryptoCopy] = useState();\n\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    fetchCrypto().then((data) => {\n      setCrypto(data);\n      setcryptoCopy(data);\n\n      setLoading(true);\n    });\n    const intervalID = setInterval(() => {\n      fetchCrypto().then((data) => {\n        setCrypto(Object.values(data));\n      });\n    }, 114000);\n\n    return () => clearInterval(intervalID);\n  }, []);\n\n  const searchHandler = (term) => {\n    const filtredCrypto = [...cryptoCopy].filter(\n      (x) =>\n        x.symbol.toLowerCase().includes(term.toLowerCase()) ||\n        x.name.toLowerCase().includes(term.toLowerCase())\n    );\n    setCrypto(filtredCrypto);\n  };\n\n  return (\n    <CryptoContex.Provider value={{ crypto, loading, searchHandler }}>\n      {children}\n    </CryptoContex.Provider>\n  );\n}\n\nexport default CryptoContexProvider;\n","import React, { useState, useContext } from \"react\";\nimport { CryptoContex } from \"../../CryptoContex\";\n\nconst Searchbar = () => {\n  const { crypto, searchHandler } = useContext(CryptoContex);\n  const [term, setTerm] = useState(\"\");\n\n  const search = () => {\n    searchHandler(term);\n  };\n\n  return (\n    <div className=\"d-flex \">\n      <input\n        value={term}\n        onChange={(e) => setTerm(e.target.value)}\n        onKeyDown={(e) => e.key === \"Enter\" && search()}\n        type=\"text\"\n        className=\"form-control me-2\"\n        placeholder=\"Search\"\n        aria-label=\"Search\"\n      />\n\n      <button className=\"btn btn-outline-primary\" onClick={search}>\n        Search\n      </button>\n    </div>\n  );\n};\n\nexport default Searchbar;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport Searchbar from \"../Searchbar/Searchbar\";\n\nimport { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router\";\n\nimport { useLocation } from \"react-router-dom\";\n\nconst Navbar = () => {\n  const location = useLocation();\n  const params = useParams();\n\n  const top10Handler = () => {\n    if (location.pathname === \"/\") {\n      window.location.reload();\n    }\n  };\n\n  return (\n    <div className=\"mt-3\">\n      <nav className=\"navbar navbar-expand navbar-light bg-light\">\n        <div className=\"container\">\n          {/* <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarTogglerDemo03\"\n            aria-controls=\"navbarTogglerDemo03\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button> */}\n          {/* <a className=\"navbar-brand\" href=\"#\">\n          Navbar\n        </a> */}\n          <div\n            className=\"collapse navbar-collapse flex-column-reverse flex-md-row \"\n            id=\"navbarTogglerDemo03\"\n          >\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 fw-bold fs-4  \">\n              <li className=\"nav-item\">\n                <Link to=\"/\" onClick={top10Handler} className=\"nav-link active\">\n                  Top10\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to=\"/favourites\" className=\"nav-link active\">\n                  Favourites\n                </Link>\n              </li>\n            </ul>\n            <span style={{ marginRight: \"10px\" }}>\n              Powered by <b>Coinpaprika</b>\n            </span>\n\n            {location.pathname === \"/\" ? <Searchbar /> : null}\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { useEffect, useLayoutEffect, useState } from \"react\";\nimport { fetchInfo } from \"./Data/CryptoApi\";\n\nconst CryptoInfo = () => {\n  const [info, setInfo] = useState(\"Wczytywanie danych\");\n  const [infoLoading, setInfoLoading] = useState(false);\n\n  useEffect(() => {\n    setInfoLoading(true);\n  }, []);\n\n  useEffect(() => {\n    fetchInfo().then((data) => {\n      setInfo(data);\n    });\n\n    const intervalID = setInterval(() => {\n      fetchInfo().then((data) => {\n        setInfo(data);\n      });\n    }, 114000);\n\n    return () => clearInterval(intervalID);\n  }, [infoLoading]);\n\n  const logoHandler = () => {\n    window.location.reload();\n  };\n\n  return (\n    <>\n      <div className=\"row d-flex align-items-center fs-4 fs-sm-2 text-left\">\n        <div className=\"col-md-3\">\n          <img src=\"../logo.jpeg\" alt=\"\" className=\"img-fluid\" />\n        </div>\n        <div className=\"col-md-3  \">\n          <span className=\"\">Market Cap</span>\n          <p className=\"fw-bold\">{info.market_cap_usd} $</p>\n        </div>\n        <div className=\"col-md-3 \">\n          24h Vol:\n          <p className=\"fw-bold\">{info.volume_24h_usd} $</p>\n        </div>\n        <div className=\"col-md-3  \">\n          BTC Dominance:\n          <p className=\"fw-bold\">{info.bitcoin_dominance_percentage} %</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CryptoInfo;\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport CryptoInfo from \"../CryptoList/CryptoInfo\";\n\nconst Header = () => {\n  return (\n    <header>\n      <div className=\"container pt-5\">\n        <CryptoInfo />\n        <Navbar />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronDown,\n  faChevronUp,\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faStar as faStarSolid } from \"@fortawesome/free-solid-svg-icons\";\nimport { faStar } from \"@fortawesome/free-regular-svg-icons\";\n\nfunction Pagination({ data, pageLimit, dataLimit }) {\n  const [pages] = useState(Math.round(data.length / dataLimit));\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isFav, setIsFav] = useState(true);\n  const idCryptoFav = [];\n\n  useEffect(() => {}, [isFav]);\n  const localData = JSON.parse(localStorage.getItem(\"favourite\"));\n\n  function getIdFromLocalStorage() {\n    if (localData != null) {\n      localData.map((item) => {\n        idCryptoFav.push(item.id);\n      });\n    }\n  }\n\n  function checkIdAlreadyExist(currency) {\n    if (idCryptoFav.includes(currency.id)) {\n      const indx = idCryptoFav.indexOf(currency.id);\n      localData.splice(indx, 1);\n      localStorage.setItem(\"favourite\", JSON.stringify(localData));\n    }\n  }\n\n  getIdFromLocalStorage();\n\n  const handleFavouriteClick = (currency, index) => {\n    setIsFav(!isFav);\n    const saveCurrencyToLocalStorage = currency;\n    let dataFromLocalStorage = [];\n\n    if (localStorage.getItem(\"favourite\") != null) {\n      dataFromLocalStorage = JSON.parse(localStorage.getItem(\"favourite\"));\n      const getCryptoId = dataFromLocalStorage.map((idcrypto) => {\n        return idcrypto.id;\n      });\n\n      if (\n        Object.values(getCryptoId).indexOf(saveCurrencyToLocalStorage.id) > -1\n      ) {\n        console.log(\"has test1\");\n        checkIdAlreadyExist(currency);\n      } else {\n        console.log(\"moge dodac\");\n        dataFromLocalStorage.push(saveCurrencyToLocalStorage);\n        localStorage.setItem(\"favourite\", JSON.stringify(dataFromLocalStorage));\n      }\n    } else {\n      console.log(\"else\");\n      dataFromLocalStorage.push(saveCurrencyToLocalStorage);\n      localStorage.setItem(\"favourite\", JSON.stringify(dataFromLocalStorage));\n    }\n  };\n\n  function goToNextPage() {\n    setCurrentPage((page) => page + 1);\n  }\n\n  function goToPreviousPage() {\n    setCurrentPage((page) => page - 1);\n  }\n\n  function changePage(event) {\n    const pageNumber = Number(event.target.textContent);\n    setCurrentPage(pageNumber);\n  }\n\n  const getPaginatedData = () => {\n    const startIndex = currentPage * dataLimit - dataLimit;\n    const endIndex = startIndex + dataLimit;\n    return data.slice(startIndex, endIndex);\n  };\n\n  const getPaginationGroup = () => {\n    let start = Math.floor((currentPage - 1) / pageLimit) * pageLimit;\n    return new Array(pageLimit).fill().map((_, idx) => start + idx + 1);\n  };\n\n  return (\n    <>\n      {/* show the posts, 10 posts at a time */}\n\n      {getPaginatedData().map((currency, idx) => (\n        <>\n          <div\n            key={currency.id}\n            className=\"row mb-4 mb-md-0 border-bottom border-bottom-sm-0\"\n          >\n            <div className=\"col-1 col-sm-1 fw-bold\">{currency.rank}</div>\n\n            <div className=\"col-6 col-sm-4 \">\n              <span className=\"d-flex justify-content-start \">\n                <Link\n                  to={`/details/${currency.id}`}\n                  className=\"text-decoration-none text-dark\"\n                >\n                  <b>{currency.name} </b>\n                </Link>\n                <span style={{ marginLeft: \"10px\" }}>({currency.symbol})</span>\n              </span>\n            </div>\n\n            <div className=\"col-5 col-sm-2\">\n              <span className=\"d-flex justify-content-end fw-bold\">\n                {currency.quotes.USD.price > 1\n                  ? currency.quotes.USD.price.toFixed(2)\n                  : currency.quotes.USD.price < 0.0001\n                  ? currency.quotes.USD.price.toFixed(8)\n                  : currency.quotes.USD.price.toFixed(4)}{\" \"}\n                USD\n              </span>\n            </div>\n\n            <div className=\"offset-1 offset-sm-1 col-4 col-sm-1\">\n              {currency.quotes.USD.percent_change_24h < 0 ? (\n                <span className=\"d-flex justify-content-center\">\n                  <FontAwesomeIcon\n                    className=\"text-danger\"\n                    icon={faChevronDown}\n                  />\n                </span>\n              ) : (\n                <span className=\"d-flex justify-content-center\">\n                  <FontAwesomeIcon\n                    className=\"text-success\"\n                    icon={faChevronUp}\n                  />\n                </span>\n              )}\n\n              <span className=\"fw-bold\">\n                {currency.quotes.USD.percent_change_24h}\n              </span>\n\n              <sup className=\"d-sm-none\"> 24h</sup>\n            </div>\n\n            <div className=\"col-4 col-sm-2\">\n              {currency.quotes.USD.percent_change_7d < 0 ? (\n                <span className=\"d-flex justify-content-center\">\n                  <FontAwesomeIcon\n                    className=\"text-danger\"\n                    icon={faChevronDown}\n                  />\n                </span>\n              ) : (\n                <span className=\"d-flex justify-content-center\">\n                  <FontAwesomeIcon\n                    className=\"text-success \"\n                    icon={faChevronUp}\n                  />\n                </span>\n              )}\n\n              <span className=\"fw-bold\">\n                {currency.quotes.USD.percent_change_7d}\n              </span>\n\n              <sup className=\"d-sm-none\"> 7d</sup>\n            </div>\n\n            <div className=\"offset-2 offset-sm-0 col-1 col-sm-1 d-flex justify-content-center align-items-center\">\n              <FontAwesomeIcon\n                className=\"text-danger\"\n                icon={idCryptoFav.includes(currency.id) ? faStarSolid : faStar}\n                style={{ cursor: \"pointer\" }}\n                onClick={() => handleFavouriteClick(currency, idx)}\n              />\n            </div>\n          </div>\n        </>\n      ))}\n\n      <div className=\"row\">\n        <div className=\"col-12 d-flex justify-content-center \">\n          <div className=\"pagination mt-2 mb-5\">\n            {/* previous button */}\n            <button\n              onClick={goToPreviousPage}\n              className={`prev ${currentPage === 1 ? \"disabled\" : \"\"} fw-bold`}\n            >\n              <FontAwesomeIcon icon={faChevronLeft} size=\"xs\" />\n            </button>\n\n            {/* show page numbers */}\n            {getPaginationGroup().map((item, index) => (\n              <button\n                key={index}\n                onClick={changePage}\n                className={`paginationItem ${\n                  currentPage === item ? \"active\" : null\n                } `}\n              >\n                <span>{item}</span>\n              </button>\n            ))}\n\n            {/* next button */}\n            <button\n              onClick={goToNextPage}\n              className={`next ${\n                currentPage === pages ? \"disabled\" : \"\"\n              } fw-bold`}\n            >\n              <FontAwesomeIcon icon={faChevronRight} size=\"xs\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Pagination;\n","import React from \"react\";\nimport Pagination from \"./Pagination\";\n\nconst CryptoRow = (props) => {\n  const { crypto } = props;\n  const sortedCrypto = crypto.sort(function (a, b) {\n    return a.rank - b.rank;\n  });\n\n  return (\n    <>\n      <Pagination\n        data={sortedCrypto}\n        pageLimit={5}\n        dataLimit={10}\n        crypto={crypto}\n      />\n    </>\n  );\n};\n\nexport default CryptoRow;\n","import React, { useContext } from \"react\";\nimport { CryptoContex } from \"../../CryptoContex\";\nimport CryptoRow from \"./CryptoRow\";\n\nconst CryptoList = () => {\n  const { crypto, loading } = useContext(CryptoContex);\n\n  return (\n    <div className=\"container fs-5\">\n      <div className=\"bg-dark\">\n        <div className=\"row mb-1\">\n          <div className=\"col-1 col-sm-1\">\n            <span className=\"text-white fs-5 fw-bold\">#</span>\n          </div>\n\n          <div className=\"col-7 col-sm-4\">\n            <span className=\"text-white fs-5 fw-bold d-flex justify-content-start\">\n              Crypto\n            </span>\n          </div>\n\n          <div className=\"col-4 col-sm-2\">\n            <span className=\"text-white fs-5 fw-bold d-flex justify-content-end\">\n              Price\n            </span>\n          </div>\n\n          <div className=\"offset-1 offset-sm-1 col-4 col-sm-1\">\n            <span className=\"d-none d-sm-block text-white fs-5 fw-bold\">\n              24h\n            </span>\n          </div>\n\n          <div className=\"col-3 col-sm-2\">\n            <span className=\"d-none d-sm-block text-white fs-5 fw-bold\">\n              7d\n            </span>\n          </div>\n\n          <div className=\"col-1 col-sm-1 d-flex align-items-center\">\n            <span className=\"d-none d-sm-block text-white fs-5 fw-bold\">\n              Favorites\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {loading === false ? (\n        <div\n          className=\"spinner-border text-primary position-absolute end-50 mt-5\"\n          role=\"status\"\n        ></div>\n      ) : (\n        <CryptoRow crypto={crypto} />\n      )}\n    </div>\n  );\n};\n\nexport default CryptoList;\n","import React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronDown,\n  faChevronUp,\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Favourites = () => {\n  const [realtime, setRealtime] = useState(false);\n\n  const favouriteCrypto = JSON.parse(localStorage.getItem(\"favourite\"));\n  const handleRemoveFavourite = (index) => {\n    favouriteCrypto.splice(index, 1);\n    localStorage.setItem(\"favourite\", JSON.stringify(favouriteCrypto));\n\n    setRealtime(!realtime);\n    if (favouriteCrypto.length === 0) {\n      localStorage.clear();\n    }\n  };\n\n  return (\n    <div className=\"container fs-5\">\n      <div className=\"bg-dark\">\n        <div className=\"row mb-1\">\n          <div className=\"col-1 col-sm-1\">\n            <span className=\"text-white fs-5 fw-bold\">#</span>\n          </div>\n\n          <div className=\"col-7 col-sm-4\">\n            <span className=\"text-white fs-5 fw-bold d-flex justify-content-start\">\n              Crypto\n            </span>\n          </div>\n\n          <div className=\"col-4 col-sm-2\">\n            <span className=\"mr-5 mr-sm-0 text-white fs-5 fw-bold d-flex justify-content-end\">\n              Price\n            </span>\n          </div>\n\n          <div className=\"offset-1 offset-sm-1 col-4 col-sm-1\">\n            <span className=\"d-none d-sm-block text-white fs-5 fw-bold\">\n              24h\n            </span>\n          </div>\n\n          <div className=\"col-3 col-sm-2\">\n            <span className=\"d-none d-sm-block text-white fs-5 fw-bold\">\n              7d\n            </span>\n          </div>\n\n          <div className=\"col-1 col-sm-1 d-flex align-items-center\">\n            <span className=\"d-none d-sm-block text-white fs-5 fw-bold\">\n              Favorites\n            </span>\n          </div>\n        </div>\n      </div>\n      <div>\n        {favouriteCrypto == null\n          ? null\n          : favouriteCrypto.map((currency, index) => {\n              return (\n                <div\n                  key={currency.id}\n                  className=\"row mb-4 mb-md-0 border-bottom border-bottom-sm-0\"\n                >\n                  <div className=\"col-1 col-sm-1 fw-bold\">{currency.rank}</div>\n\n                  <div className=\"col-6 col-sm-4\">\n                    <span className=\"d-flex justify-content-start\">\n                      <b>{currency.name} </b>\n                      <span style={{ marginLeft: \"10px\" }}>\n                        ({currency.symbol})\n                      </span>\n                    </span>\n                  </div>\n\n                  <div className=\"col-5 col-sm-2\">\n                    <span className=\"d-flex justify-content-end fw-bold\">\n                      {currency.quotes.USD.price.toFixed(2)} USD\n                    </span>\n                  </div>\n\n                  <div className=\"offset-1 offset-sm-1 col-4 col-sm-1\">\n                    {currency.quotes.USD.percent_change_24h < 0 ? (\n                      <span className=\"d-flex justify-content-center\">\n                        <FontAwesomeIcon\n                          className=\"text-danger\"\n                          icon={faChevronDown}\n                        />\n                      </span>\n                    ) : (\n                      <span className=\"d-flex justify-content-center\">\n                        <FontAwesomeIcon\n                          className=\"text-success\"\n                          icon={faChevronUp}\n                        />\n                      </span>\n                    )}\n\n                    <span className=\"fw-bold\">\n                      {currency.quotes.USD.percent_change_24h}\n                    </span>\n\n                    <sup className=\"d-sm-none\"> 24h</sup>\n                  </div>\n\n                  <div className=\"col-4 col-sm-2\">\n                    {currency.quotes.USD.percent_change_7d < 0 ? (\n                      <span className=\"d-flex justify-content-center\">\n                        <FontAwesomeIcon\n                          className=\"text-danger\"\n                          icon={faChevronDown}\n                        />\n                      </span>\n                    ) : (\n                      <span className=\"d-flex justify-content-center\">\n                        <FontAwesomeIcon\n                          className=\"text-success \"\n                          icon={faChevronUp}\n                        />\n                      </span>\n                    )}\n\n                    <span className=\"fw-bold\">\n                      {currency.quotes.USD.percent_change_7d}\n                    </span>\n\n                    <sup className=\"d-sm-none\"> 7d</sup>\n                  </div>\n\n                  <div className=\"offset-2 offset-sm-0 col-1 col-sm-1 d-flex justify-content-center align-items-center\">\n                    <FontAwesomeIcon\n                      className=\"text-danger\"\n                      icon={faStar}\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => handleRemoveFavourite(index)}\n                    />\n                  </div>\n                </div>\n              );\n            })}\n      </div>\n      {favouriteCrypto == null ? (\n        <span className=\"mt-5 fs-5 d-flex justify-content-center text-danger fw-bold \">\n          Brak polubionych walut\n        </span>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Favourites;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"fixed-bottom\">\n      <div className=\"bg-dark\">\n        <div className=\"container\">\n          <span className=\"text-white fs-5 fw-bold\">\n            All rights reserved © 2021 CoinPrice.pl\n          </span>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n// fixed-bottom\n","import React, { useContext } from \"react\";\nimport { CryptoContex } from \"../../CryptoContex\";\nimport { useParams } from \"react-router\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronDown,\n  faChevronUp,\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst CryptoDetails = () => {\n  const { crypto, loading } = useContext(CryptoContex);\n  const params = useParams();\n\n  return (\n    <>\n      {loading === false ? (\n        <div\n          className=\"spinner-border text-primary position-absolute end-50 mt-5\"\n          role=\"status\"\n        ></div>\n      ) : (\n        crypto.map((singleCrypto) => {\n          if (singleCrypto.id === params.id) {\n            return (\n              <>\n                <div\n                  key={singleCrypto.id}\n                  className=\"col-12 container text-dark mt-4\"\n                >\n                  <div className=\"\">\n                    <div className=\"container alert alert-dismissible alert-primary\">\n                      <span className=\"fs-3 fw-bold\">\n                        {singleCrypto.symbol} - Price Statistic\n                      </span>\n                    </div>\n\n                    <div className=\"row mt-4 d-flex\">\n                      <div className=\"col-12 d-flex flex-column flex-md-row  \">\n                        <div className=\"col-12 col-md-4 d \">\n                          <div className=\"card\" style={{ maxWidth: \"20rem\" }}>\n                            <div className=\"card-header fw-bold\">\n                              <span>{singleCrypto.name} Price</span>\n                            </div>\n                            <div className=\"card-body\">\n                              <h4 className=\"card-title\">\n                                <span>\n                                  {singleCrypto.quotes.USD.price.toFixed(2)} USD\n                                </span>\n                              </h4>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-12 col-md-4 mt-4 mt-md-0\">\n                          <div className=\"card  \" style={{ maxWidth: \"20rem\" }}>\n                            <div className=\"card-header fw-bold\">\n                              <span>Highest price (All Time)</span>\n                            </div>\n                            <div className=\"card-body\">\n                              <h4 className=\"card-title\">\n                                {singleCrypto.quotes.USD.ath_price.toFixed(2)}\n                                USD\n                              </h4>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-12 col-md-4 mt-4 mt-md-0\">\n                          <div className=\"card  \" style={{ maxWidth: \"20rem\" }}>\n                            <div className=\"card-header fw-bold\">\n                              <span>Price Change (24h)</span>\n                            </div>\n                            <div className=\"card-body\">\n                              <h4 className=\"card-title\">\n                                <span>\n                                  {singleCrypto.quotes.USD.percent_change_24h} %\n                                  {singleCrypto.quotes.USD.percent_change_24h <\n                                  0 ? (\n                                    <span className=\"ms-2\">\n                                      <FontAwesomeIcon\n                                        className=\"text-danger\"\n                                        icon={faChevronDown}\n                                      />\n                                    </span>\n                                  ) : (\n                                    <span className=\"ms-2\">\n                                      <FontAwesomeIcon\n                                        className=\"text-success\"\n                                        icon={faChevronUp}\n                                      />\n                                    </span>\n                                  )}\n                                </span>\n                              </h4>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row mt-4\">\n                      <div className=\"col-12 d-flex flex-column flex-md-row\">\n                        <div className=\"col-12 col-md-4\">\n                          <div className=\"card\" style={{ maxWidth: \"20rem\" }}>\n                            <div className=\"card-header fw-bold\">\n                              <span>Price Change (30 day)</span>\n                            </div>\n                            <div className=\"card-body\">\n                              <h4 className=\"card-title\">\n                                <span>\n                                  {singleCrypto.quotes.USD.percent_change_30d} %\n                                  {singleCrypto.quotes.USD.percent_change_30d <\n                                  0 ? (\n                                    <span className=\"ms-2\">\n                                      <FontAwesomeIcon\n                                        className=\"text-danger\"\n                                        icon={faChevronDown}\n                                      />\n                                    </span>\n                                  ) : (\n                                    <span className=\"ms-2\">\n                                      <FontAwesomeIcon\n                                        className=\"text-success\"\n                                        icon={faChevronUp}\n                                      />\n                                    </span>\n                                  )}\n                                </span>\n                              </h4>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-12 col-md-4 mt-4 mt-md-0\">\n                          <div className=\"card\" style={{ maxWidth: \"20rem\" }}>\n                            <div className=\"card-header fw-bold\">\n                              <span>Max Supply</span>\n                            </div>\n                            <div className=\"card-body\">\n                              <h4 className=\"card-title\">\n                                <span>\n                                  {singleCrypto.max_supply}\n                                  {singleCrypto.symbol}\n                                </span>\n                              </h4>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-12 col-md-4 mt-4 mb-4 mb-md-0 mt-md-0\">\n                          <div className=\"card  \" style={{ maxWidth: \"20rem\" }}>\n                            <div className=\"card-header fw-bold\">\n                              <span>Market Cap</span>\n                            </div>\n                            <div className=\"card-body\">\n                              <h4 className=\"card-title\">\n                                <span>\n                                  {singleCrypto.quotes.USD.market_cap} USD\n                                </span>\n                              </h4>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </>\n            );\n          }\n        })\n      )}\n    </>\n  );\n};\n\nexport default CryptoDetails;\n\n// {\n//   <div key={singleCrypto.id} className=\"col-12 container text-dark mt-4\">\n//     <div className=\"\">\n//       <div className=\"container alert alert-dismissible alert-primary\">\n//         <span className=\"fs-3 fw-bold\">\n//           {singleCrypto.symbol} - Price Statistic\n//         </span>\n//       </div>\n//       <div className=\"col-12 mt-5 d-flex  flex-wrap\">\n//         <div className=\"col-4 card mb-3  \" style={{ maxWidth: \"20rem\" }}>\n//           <div className=\"card-header fw-bold\">\n//             <span>{singleCrypto.name} Price</span>\n//           </div>\n//           <div className=\"card-body\">\n//             <h4 className=\"card-title\">\n//               {\" \"}\n//               <span>{singleCrypto.quotes.USD.price.toFixed(2)} USD</span>\n//             </h4>\n//           </div>\n//         </div>\n//         <div className=\"col-4 card mb-3  \" style={{ maxWidth: \"20rem\" }}>\n//           <div className=\"card-header fw-bold\">\n//             <span>Highest price (All Time)</span>\n//           </div>\n//           <div className=\"card-body\">\n//             <h4 className=\"card-title\">\n//               {\" \"}\n//               {singleCrypto.quotes.USD.ath_price.toFixed(2)} USD\n//             </h4>\n//           </div>\n//         </div>\n//         <div className=\"col-4 card mb-3 \" style={{ maxWidth: \"20rem\" }}>\n//           <div className=\"card-header fw-bold\">\n//             <span>Price Change (24h)</span>\n//           </div>\n//           <div className=\"card-body\">\n//             <h4 className=\"card-title\">\n//               <span>\n//                 {singleCrypto.quotes.USD.percent_change_24h} %\n//                 {singleCrypto.quotes.USD.percent_change_24h < 0 ? (\n//                   <span className=\"ms-2\">\n//                     <FontAwesomeIcon\n//                       className=\"text-danger\"\n//                       icon={faChevronDown}\n//                     />\n//                   </span>\n//                 ) : (\n//                   <span className=\"ms-2\">\n//                     <FontAwesomeIcon\n//                       className=\"text-success\"\n//                       icon={faChevronUp}\n//                     />\n//                   </span>\n//                 )}\n//               </span>\n//             </h4>\n//           </div>\n//         </div>\n//         <div className=\"col-4 card mb-3  \" style={{ maxWidth: \"20rem\" }}>\n//           <div className=\"card-header fw-bold\">\n//             <span>Price Change (30 day)</span>\n//           </div>\n//           <div className=\"card-body\">\n//             <h4 className=\"card-title\">\n//               {\" \"}\n//               <span>\n//                 {singleCrypto.quotes.USD.percent_change_30d} %\n//                 {singleCrypto.quotes.USD.percent_change_30d < 0 ? (\n//                   <span className=\"ms-2\">\n//                     <FontAwesomeIcon\n//                       className=\"text-danger\"\n//                       icon={faChevronDown}\n//                     />\n//                   </span>\n//                 ) : (\n//                   <span className=\"ms-2\">\n//                     <FontAwesomeIcon\n//                       className=\"text-success\"\n//                       icon={faChevronUp}\n//                     />\n//                   </span>\n//                 )}\n//               </span>\n//             </h4>\n//           </div>\n//         </div>\n//         <div className=\"col-4 card mb-3  \" style={{ maxWidth: \"20rem\" }}>\n//           <div className=\"card-header fw-bold\">\n//             <span>Max Supply</span>\n//           </div>\n//           <div className=\"card-body\">\n//             <h4 className=\"card-title\">\n//               {\" \"}\n//               <span>\n//                 {singleCrypto.max_supply} {singleCrypto.symbol}\n//               </span>{\" \"}\n//             </h4>\n//           </div>\n//         </div>\n//         <div className=\"col-4 card mb-3  \" style={{ maxWidth: \"20rem\" }}>\n//           <div className=\"card-header fw-bold\">\n//             <span>Market Cap</span>\n//           </div>\n//           <div className=\"card-body\">\n//             <h4 className=\"card-title\">\n//               {\" \"}\n//               <span>{singleCrypto.quotes.USD.market_cap} USD</span>{\" \"}\n//             </h4>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   </div>;\n// }\n","import \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport CryptoList from \"./components/CryptoList/CryptoList\";\nimport Favourites from \"./components/Favourites/Favourites\";\nimport Footer from \"./components/Footer/Footer\";\nimport CryptoDetails from \"./components/pages/CryptoDetails\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport CryptoContexProvider from \"./CryptoContex\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CryptoContexProvider>\n        <Router>\n          <Header />\n          <Route exact={true} path=\"/\">\n            <CryptoList />\n          </Route>\n          <Route path=\"/details/:id\">\n            <CryptoDetails />\n          </Route>\n\n          <Route path=\"/favourites\">\n            <Favourites />\n          </Route>\n        </Router>\n      </CryptoContexProvider>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"whatwg-fetch\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}